1. Постановка задачи:
Реализовать приложение для нахождения минимальной подсети для заданного набора IP-адресов.

2. Требования:
1) Приложение подбирает для заданного набора IP-адресов минимальную подсеть, содержащую данные IP-адреса. 
2) Необходим набор тестов для функционального тестирования и проверки corner cases (например, некорректные или несоответствующие заданной версии IP-адреса в файле) с оценкой тестового покрытия.
3) Необходимо документировать код и приложение (файл README.md).

3. Условия:
1) Наборы IP-адресов хранятся в текстовых файлах (отдельно для IPv4 и IPv6).
2) Программа запускается через командную строку (CLI), принимая в качестве параметров имя файла с IP-адресами и версию IP.
3) Используемые функции и алгоритмы снабжены информативными комментариями.
4) Тесты оформлены в отдельном каталоге/файле.
5) Документация в виде README.md файла содержит оценки временнОй эффективности используемого алгоритма и описание способов запуска программы.
6) Код соответствует PEP8.
7) Использование внешних зависимостей (модулей, не входящих в стандартную библиотеку) сведено к минимуму.

4. Примеры:
Пример входных данных IPv4:

192.168.1.2
192.168.1.3
192.168.1.5

Ожидаемый результат:

Result net: 192.168.1.0/29

#=======================================

Пример входных данных IPv6:

ffe0::1:0:0:0
ffe0::2:0:0:0
ffe0::4:0:0:0
ffe0::8:0:0:0
ffe0::10:0:0:0
ffe0::20:0:0:0
ffe0::40:0:0:0
ffe0::80:0:0:0

Ожидаемый результат:

Result net: ffe0::/72

